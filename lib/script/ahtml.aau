import script.aau;
namespace script.ahtml;

var rep = ..string.replace;

var compile = function (code) {
	if ( ! ..string.find(code, "<\<\?>|<\?\>>") ) {
		return '..io.stdout.write("' + rep(code, '"', '""') + '");';
	}
	var replacer = function (r, s) {
		if (#s) {
			return r + '..io.stdout.write("' + rep(s, '"', '""') + '");';
		}
		else {
			return r;
		}
	}
	code = rep(code, "\<\?<\s*>=([\s\S]*?)<;*>\?\>", "<?..io.stdout.write(\1);?>");
	code = rep(code, "^(<\r\n>?)([\s\S]*?)\<\?", replacer);
	code = rep(code, "\?\>(<\r\n>?)([\s\S]*?)\<\?", replacer);
	code = rep(code, "\?\>(<\r\n>?)([\s\S]*?)$", replacer);
	return code;
}

run = function (ns, filename = "", code) {
	if (code === null) {
		var file = ..fsys.file(filename, "r");
		if ( ! file) {
			error( ..string.concat(filename, "²»´æÔÚ"), 3 );
		}
		code = file.read(-1);	
		file.close();
	}
	code = compile(code);
	..script.aau.run(ns, filename, code);
}
import util.buffer.headers;
import util.buffer.cookies;
namespace util.buffer;

var oldStdoutWrite, oldStdErrWrite;
var stdOutBuf, stdErrBuf;

beginBuffer = function () {
	oldStdoutWrite = ..io.stdout.write;
	oldStdErrWrite = ..io.stderr.write;
	stdOutBuf = {}; stdErrBuf = {};
	..io.status = null;
	..io.headers = headers();
	..io.COOKIE = cookies(..io.SERVER["HTTP_COOKIE"]);
	..io.stdout.write = function (...) {
		if (#{...})
			..table.push(stdOutBuf, ...);
	}
	..io.stderr.write = function (...) {
		if (#{...})
			..table.push(stdErrBuf, ...);
	}
}

endBuffer = function () {
	if (..io.status !== null) {
		oldStdoutWrite("Status: ", ..io.status, '\r\n');
	}
	for (k, v in ..io.headers) {
		oldStdoutWrite(k, ": ", v, '\r\n');
	}
	oldStdoutWrite(..io.COOKIE.genHeaders());
	oldStdoutWrite('\r\n');
	oldStdoutWrite( ..table.unpack(stdOutBuf) );
	oldStdErrWrite( ..table.unpack(stdErrBuf) );
	..io.stdout.write = oldStdoutWrite;
	..io.stderr.write = oldStdErrWrite;
}
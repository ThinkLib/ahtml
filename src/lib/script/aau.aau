import script.config;
import string.template;
namespace script;

var config = ..script.config;

aau = class {
	dofile = function (filename = "", code, args) {
		if (code === null) {
			var file = ..fsys.file(filename, "r");
			if ( ! file) {
				error( ..string.concat(filename, "²»´æÔÚ"), 3 );
			}
			code = file.read(-1);
			file.close();
		}
		var f, err = loadcode(code);
		if (!f) throwError(filename, err);
		var parentDir = ..fsys.getParentDir(filename);
		var preCurDir = ..fsys.getCurDir();
		..fsys.setCurDir(parentDir);
		var ret = { ..fiber.resume( ..fiber.create(f, ..request.server["DOCUMENT_ROOT"]), args ) };
		..fsys.setCurDir(preCurDir);
		if (!ret[1] && ret[2] !== "") throwError(filename, ret[2]);
		return rget( 2, ..table.unpack(ret) );
	}
}

namespace aau {
	toUTF8 = function (s) {
		return ..string.fromto(s, 0, 65001);
	}
	
	throwError = function (filename, e) {
		var tpl = ..string.template(config.errorTemplate);
		
		var line = ..string.match(e, "line\:#(\d+)") : "";
		e = rget( 2, ..string.match(e, "file\:([\s\S]+)<error\:>|<\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-[\s\r\n]+>(.+)") );
		filename = ..string.html.fromText(filename) : "";
		e = ..string.html.fromText(e) : "";
		..io.stderr.write(toUTF8(tpl.format(
			path = filename;
			line = line;
			message = e;
		)));
		error("", -1);
	}
}

/*Import{{*/
import string.html;
import mysql;
/*}}*/
